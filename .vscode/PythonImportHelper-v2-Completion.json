[
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "smtplib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "smtplib",
        "description": "smtplib",
        "detail": "smtplib",
        "documentation": {}
    },
    {
        "label": "ssl",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "ssl",
        "description": "ssl",
        "detail": "ssl",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "encoders",
        "importPath": "email",
        "description": "email",
        "isExtraImport": true,
        "detail": "email",
        "documentation": {}
    },
    {
        "label": "MIMEBase",
        "importPath": "email.mime.base",
        "description": "email.mime.base",
        "isExtraImport": true,
        "detail": "email.mime.base",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "pytz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytz",
        "description": "pytz",
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "DefaultAzureCredential",
        "importPath": "azure.identity",
        "description": "azure.identity",
        "isExtraImport": true,
        "detail": "azure.identity",
        "documentation": {}
    },
    {
        "label": "BlobServiceClient",
        "importPath": "azure.storage.blob",
        "description": "azure.storage.blob",
        "isExtraImport": true,
        "detail": "azure.storage.blob",
        "documentation": {}
    },
    {
        "label": "SecretClient",
        "importPath": "azure.keyvault.secrets",
        "description": "azure.keyvault.secrets",
        "isExtraImport": true,
        "detail": "azure.keyvault.secrets",
        "documentation": {}
    },
    {
        "label": "AzureLogHandler",
        "importPath": "opencensus.ext.azure.log_exporter",
        "description": "opencensus.ext.azure.log_exporter",
        "isExtraImport": true,
        "detail": "opencensus.ext.azure.log_exporter",
        "documentation": {}
    },
    {
        "label": "azure.functions",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "azure.functions",
        "description": "azure.functions",
        "detail": "azure.functions",
        "documentation": {}
    },
    {
        "label": "itertools",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "itertools",
        "description": "itertools",
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "rrc_trigger",
        "kind": 2,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "def rrc_trigger(myTimer: func.TimerRequest) -> None:\n    class Detection:\n        def __init__(self):\n            self.detection_data = {\n                \"Created at\": \"\",\n                \"Car ID\": \"\",\n                \"Intermodal Container ID\": \"\",\n                \"Camera ID\": \"\",\n            }\n            self.image = None",
        "detail": "function_app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "app = func.FunctionApp()\n# Constants\nMAX_EMAIL_SIZE = 20 * 1024 * 1024  # 20MB\nCENTRAL_TZ = pytz.timezone(\"US/Central\")\nMOUNTAIN_TZ = pytz.timezone(\"US/Mountain\")\nUTC_TZ = pytz.utc\nTIMEZONES = {\n    \"Mountain\": MOUNTAIN_TZ,\n    \"Central\": CENTRAL_TZ,\n    \"UTC\": UTC_TZ,",
        "detail": "function_app",
        "documentation": {}
    },
    {
        "label": "MAX_EMAIL_SIZE",
        "kind": 5,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "MAX_EMAIL_SIZE = 20 * 1024 * 1024  # 20MB\nCENTRAL_TZ = pytz.timezone(\"US/Central\")\nMOUNTAIN_TZ = pytz.timezone(\"US/Mountain\")\nUTC_TZ = pytz.utc\nTIMEZONES = {\n    \"Mountain\": MOUNTAIN_TZ,\n    \"Central\": CENTRAL_TZ,\n    \"UTC\": UTC_TZ,\n}\n@app.timer_trigger(schedule=\"0 */1 * * * *\", arg_name=\"myTimer\",",
        "detail": "function_app",
        "documentation": {}
    },
    {
        "label": "CENTRAL_TZ",
        "kind": 5,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "CENTRAL_TZ = pytz.timezone(\"US/Central\")\nMOUNTAIN_TZ = pytz.timezone(\"US/Mountain\")\nUTC_TZ = pytz.utc\nTIMEZONES = {\n    \"Mountain\": MOUNTAIN_TZ,\n    \"Central\": CENTRAL_TZ,\n    \"UTC\": UTC_TZ,\n}\n@app.timer_trigger(schedule=\"0 */1 * * * *\", arg_name=\"myTimer\",\n                   run_on_startup=False, use_monitor=False)",
        "detail": "function_app",
        "documentation": {}
    },
    {
        "label": "MOUNTAIN_TZ",
        "kind": 5,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "MOUNTAIN_TZ = pytz.timezone(\"US/Mountain\")\nUTC_TZ = pytz.utc\nTIMEZONES = {\n    \"Mountain\": MOUNTAIN_TZ,\n    \"Central\": CENTRAL_TZ,\n    \"UTC\": UTC_TZ,\n}\n@app.timer_trigger(schedule=\"0 */1 * * * *\", arg_name=\"myTimer\",\n                   run_on_startup=False, use_monitor=False)\ndef rrc_trigger(myTimer: func.TimerRequest) -> None:",
        "detail": "function_app",
        "documentation": {}
    },
    {
        "label": "UTC_TZ",
        "kind": 5,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "UTC_TZ = pytz.utc\nTIMEZONES = {\n    \"Mountain\": MOUNTAIN_TZ,\n    \"Central\": CENTRAL_TZ,\n    \"UTC\": UTC_TZ,\n}\n@app.timer_trigger(schedule=\"0 */1 * * * *\", arg_name=\"myTimer\",\n                   run_on_startup=False, use_monitor=False)\ndef rrc_trigger(myTimer: func.TimerRequest) -> None:\n    class Detection:",
        "detail": "function_app",
        "documentation": {}
    },
    {
        "label": "TIMEZONES",
        "kind": 5,
        "importPath": "function_app",
        "description": "function_app",
        "peekOfCode": "TIMEZONES = {\n    \"Mountain\": MOUNTAIN_TZ,\n    \"Central\": CENTRAL_TZ,\n    \"UTC\": UTC_TZ,\n}\n@app.timer_trigger(schedule=\"0 */1 * * * *\", arg_name=\"myTimer\",\n                   run_on_startup=False, use_monitor=False)\ndef rrc_trigger(myTimer: func.TimerRequest) -> None:\n    class Detection:\n        def __init__(self):",
        "detail": "function_app",
        "documentation": {}
    }
]